name: Terraform + ETL Automation

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  SCRIPT_PATH: etl/etl-glue-script.py
  ETL_JOB_NAME: glue-etl-job
  CRAWLER_NAME: my-etl-crawler

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest
    outputs:
      bucket_name: ${{ steps.get_bucket.outputs.bucket_name }}
      glue_job_name: ${{ steps.get_bucket.outputs.glue_job_name }}
      crawler_name: ${{ steps.get_bucket.outputs.crawler_name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve
        env:
          TF_VAR_glue_role_arn: ${{ secrets.GLUE_ROLE_ARN }}

      - name: Get Terraform Outputs
        id: get_bucket
        working-directory: infra
        run: |
          BUCKET=$(terraform output -raw etl_bucket_name)
          JOB_NAME=$(terraform output -raw glue_job_name)
          CRAWLER=$(terraform output -raw glue_crawler_name)
          echo "bucket_name=$BUCKET" >> $GITHUB_OUTPUT
          echo "glue_job_name=$JOB_NAME" >> $GITHUB_OUTPUT
          echo "crawler_name=$CRAWLER" >> $GITHUB_OUTPUT

  run-etl:
    needs: terraform-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      

      - name: Start Glue ETL Job
        id: start_etl
        run: |
          JOB_RUN_ID=$(aws glue start-job-run --job-name ${{ needs.terraform-deploy.outputs.glue_job_name }} --query 'JobRunId' --output text)
          echo "ETL JobRunId: $JOB_RUN_ID"
          echo "job_run_id=$JOB_RUN_ID" >> $GITHUB_OUTPUT

      - name: Wait for ETL Job Completion
        run: |
          JOB_RUN_ID=${{ steps.start_etl.outputs.job_run_id }}
          while true; do
            STATUS=$(aws glue get-job-run --job-name ${{ needs.terraform-deploy.outputs.glue_job_name }} --run-id "$JOB_RUN_ID" --query 'JobRun.JobRunState' --output text)
            echo "Current ETL job status: $STATUS"
            if [ "$STATUS" == "SUCCEEDED" ]; then
              echo "ETL Job completed successfully."
              break
            elif [ "$STATUS" == "FAILED" ] || [ "$STATUS" == "STOPPED" ]; then
              echo "ETL Job failed or stopped."
              exit 1
            fi
            sleep 30
          done

      - name: Start Glue Crawler
        run: aws glue start-crawler --name ${{ needs.terraform-deploy.outputs.crawler_name }}

#
